"""
–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–∞, –æ–±—â–∏—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞

–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ñ–∞–π–ª–∞ –≥–µ–Ω–µ—Ä—è—Ç—Å—è json-—Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É keyboards_telegram

–ü–æ —Å—É—Ç–∏, –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏–∑ –≤–∫. –û—Ç–ª–∏—á–∏—è:
- –í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π –≤ "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏"
  (—Ç.–∫. –≤ —Ç–µ–ª–µ–≥–µ –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å url –≤ non-inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –¥–∞ –∏ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è –º–∞–ª–æ –∫–æ–º—É —ç—Ç–æ –Ω–∞–¥–æ)
- –í –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–∫–∞—Ö –Ω–µ—Ç payload-–∞ (–æ–Ω –∂–µ callback_data), –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ inline
  (–æ–ø—è—Ç—å –∂–µ —Å–ø—Å telegram api)
- –ò–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è callback_data –≤ 64 –±–∞–π—Ç–∞ –≤–º–µ—Å—Ç–æ json-—Ñ–æ—Ä–º–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π,
  –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ç–µ–º –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ json —Ñ—É–Ω–∫—Ü–∏–µ–π str_to_json() (c–º. telegram_bot.py)
- –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ –∂–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (–Ω–∞–≤–µ—Ä–Ω–æ–µ) callback_data –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–∞—Ç–∏–Ω–∏—Ü–µ–π., —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö
  —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã–µ –∫ –∫–ª—é—á–∞–º weekday –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º. (callback_to_json –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –æ–±—Ä–∞—Ç–Ω–æ)
- –ü–æ —Ç–µ–º –∂–µ –ø—Ä–∏—á–∏–Ω–∞–º –≤–≤–µ–¥–µ–Ω—ã —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –≤ callback_data:
    - type -> t
    - action_type -> a_t
    - command -> c
    - place -> p
    - weekday -> wd
    - subject -> sj
    - department_id -> did
    - list_id -> lid
  –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ payload vk-style –≤ callback_data —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è payload_to_callback() –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ
"""
import traceback

from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import json
import logging

logger = logging.getLogger(__name__)
console_handler = logging.StreamHandler()
logger.setLevel(logging.INFO)
logger.addHandler(console_handler)


def payload_to_callback(payload) -> str:
    """
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç payload vk-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Å–≤–æ–µ–æ–±—Ä–∞–∑–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π callback_data –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–∞.
    –û–±—Ä–∞—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è callback_to_json() –≤ —Ñ–∞–π–ª–µ telegram_bot.py.

    –ü—Ä–∏–º–µ—Ä:
    payload={"type": "action", "action_type": "message", "command": "table_empty"}
    callback_data='t:action,a_t:message,c:table_empty'
    :param payload: –≤—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ json-dict payload-–∞ –∏–∑ –≤–∫
    :return: callback_data string
    """

    if type(payload) == str:
        payload = json.loads(payload)
    elif type(payload) == dict:
        pass
    else:
        raise TypeError('–ü–µ—Ä–µ–¥–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö')
    payload_item_list = ['type', 'command', 'place', 'weekday', 'subject', 'department_id', 'list_id']
    callback_item_list = ['t', 'a_t', 'c', 'p', 'wd', 'sj', 'did', 'lid']
    callback_data = ''
    for item in payload:
        if item in payload_item_list:
            callback_data += callback_item_list[payload_item_list.index(item)] + ':' + payload[item] + ','
        else:
            callback_data += item + ':' + payload[item] + ','
    if len(callback_data[:-1]) > 64:  # –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç–µ–ª–µ–≥–∏ –Ω–∞ 64 –±–∞–π—Ç–∞ (–ø–æ —Å—É—Ç–∏ 1 –±–∞–π—Ç = 1 —Å–∏–º–≤–æ–ª, —è –ø—Ä–æ–≤–µ—Ä—è–ª)
        raise ValueError(f'\t–£–í–ê–ì–ê!! –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π callback_data, —Ç–µ–ª–µ–≥—Ä–∞–º —Ç–∞–∫–æ–µ –Ω–µ —Å–∫—É—à–∞–µ—Ç. Payload: {payload}')
    return callback_data[:-1]  # –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª - –∑–∞–ø—è—Ç–∞—è, –ø–æ—ç—Ç–æ–º—É –æ—Ç—Å–µ–∫–∞–µ–º –µ–µ


# –ì–õ–ê–í–ù–´–ï –ö–õ–ê–í–ò–ê–¢–£–†–´
# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
def keyboard_main_cal():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º')
    markup = ReplyKeyboardMarkup(resize_keyboard=True)  # –æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ - –Ω–µ inline
    btn_table = KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì')  # callback_data —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Ç–æ–∂–µ –Ω–µ—Ç
    btn_cal = KeyboardButton('–ö–∞–ª–µ–Ω–¥–∞—Ä—å üìÜ')
    btn_literature = KeyboardButton('–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ üìö')
    btn_prepods = KeyboardButton('–ü—Ä–µ–ø–æ–¥—ã üë®üèº‚Äçüè´')
    btn_other = KeyboardButton('–ü—Ä–æ—á–µ–µ ‚öô')
    btn_links = KeyboardButton('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ üîó')
    markup.row(btn_table, btn_cal)
    markup.row(btn_literature, btn_prepods)
    markup.row(btn_other, btn_links)
    logger.info(f'–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
def keyboard_main():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn_table = KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì')
    btn_literature = KeyboardButton('–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ üìö')
    btn_prepods = KeyboardButton('–ü—Ä–µ–ø–æ–¥—ã üë®üèº‚Äçüè´')
    btn_other = KeyboardButton('–ü—Ä–æ—á–µ–µ ‚öô')
    btn_links = KeyboardButton('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ üîó')
    markup.row(btn_table)
    markup.row(btn_literature, btn_prepods)
    markup.row(btn_other, btn_links)
    logger.info(f'–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –í–õ–û–ñ–ï–ù–ù–´–ï –ö–õ–ê–í–ò–ê–¢–£–†–´ (inline)
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –ø—É—Å—Ç–∞—è
def keyboard_table_():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –ø—É—Å—Ç—É—é')
    markup = InlineKeyboardMarkup()

    payload = {'type': 'action',
               'command': 'table_empty'}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_where = InlineKeyboardButton('–ì–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', callback_data=callback_data)

    markup.row(btn_where)
    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –ø—É—Å—Ç–∞—è –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –°–ï–°–°–ò–Ø
def keyboard_table_exam():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –°–ï–°–°–ò–Ø')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_exam"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_exam = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤', callback_data=callback_data)

    markup.row(btn_exam)
    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –°–ï–°–°–ò–Ø –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –°–ï–°–°–ò–Ø additional
def keyboard_table_exam_additional():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –°–ï–°–°–ò–Ø additional')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_exam"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_exam = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_exam_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_exam_additional = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤ (–¥–æ–ø)', callback_data=callback_data)

    markup.row(btn_exam, btn_exam_additional)
    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –°–ï–°–°–ò–Ø additional –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –æ–±—ã—á–Ω–∞—è
def keyboard_table_study():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –æ–±—ã—á–Ω—É—é')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_today"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_tomorrow"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tomorrow = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_other"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_other = InlineKeyboardButton('–ù–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_prepods"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_prepods = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', callback_data=callback_data)

    markup.row(btn_today)
    markup.row(btn_tomorrow)
    markup.row(btn_other)
    markup.row(btn_prepods)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –æ–±—ã—á–Ω–∞—è –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –æ–±—ã—á–Ω–∞—è additional
def keyboard_table_study_additional():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –æ–±—ã—á–Ω—É—é additional')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_today"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today = InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_today_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today_additional = InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_tomorrow"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tomorrow = InlineKeyboardButton('–ó–∞–≤—Ç—Ä–∞', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_tomorrow_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tomorrow_additional = InlineKeyboardButton('–ó–∞–≤—Ç—Ä–∞ (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_other"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_other = InlineKeyboardButton('–î—Ä—É–≥–∏–µ –¥–Ω–∏', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_other_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_other_additional = InlineKeyboardButton('–î—Ä—É–≥–∏–µ –¥–Ω–∏ (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_prepods"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_prepods = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', callback_data=callback_data)

    markup.row(btn_today, btn_today_additional)
    markup.row(btn_tomorrow, btn_tomorrow_additional)
    markup.row(btn_other, btn_other_additional)
    markup.row(btn_prepods)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" –æ–±—ã—á–Ω–∞—è additional –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" —Å–º–µ—à–∞–Ω–Ω–∞—è (—ç–∫–∑–∞–º–µ–Ω—ã + —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ)
def keyboard_table_mixed():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" —Å–º–µ—à–∞–Ω–Ω—É—é')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_exam"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_exam = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_today"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_tomorrow"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tomorrow = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_other"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_other = InlineKeyboardButton('–ù–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_prepods"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_prepods = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', callback_data=callback_data)

    markup.row(btn_exam)
    markup.row(btn_today)
    markup.row(btn_tomorrow)
    markup.row(btn_other)
    markup.row(btn_prepods)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" —Å–º–µ—à–∞–Ω–Ω–∞—è –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" —Å–º–µ—à–∞–Ω–Ω–∞—è (—ç–∫–∑–∞–º–µ–Ω—ã + —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ) additional
def keyboard_table_mixed_additional():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" —Å–º–µ—à–∞–Ω–Ω—É—é additional')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_exam"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_exam = InlineKeyboardButton('–≠–∫–∑–∞–º–µ–Ω—ã', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_exam_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_exam_additional = InlineKeyboardButton('–≠–∫–∑–∞–º–µ–Ω—ã (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_today"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today = InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_today_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today_additional = InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_tomorrow"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tomorrow = InlineKeyboardButton('–ó–∞–≤—Ç—Ä–∞', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_tomorrow_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tomorrow_additional = InlineKeyboardButton('–ó–∞–≤—Ç—Ä–∞ (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_other"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_other = InlineKeyboardButton('–î—Ä—É–≥–∏–µ –¥–Ω–∏', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_other_2"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_other_additional = InlineKeyboardButton('–î—Ä—É–≥–∏–µ –¥–Ω–∏ (–¥–æ–ø)', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_prepods"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_prepods = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π', callback_data=callback_data)

    markup.row(btn_exam, btn_exam_additional)
    markup.row(btn_today, btn_today_additional)
    markup.row(btn_tomorrow, btn_tomorrow_additional)
    markup.row(btn_other, btn_other_additional)
    markup.row(btn_prepods)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è" —Å–º–µ—à–∞–Ω–Ω–∞—è additional –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
def keyboard_calendar():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "calendar_today"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_cal_today = InlineKeyboardButton('–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "calendar_tomorrow"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_cal_tomorrow = InlineKeyboardButton('–ö–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞', callback_data=callback_data)

    markup.row(btn_cal_today)
    markup.row(btn_cal_tomorrow)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å" –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü—Ä–æ—á–µ–µ"
def keyboard_other():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–ü—Ä–æ—á–µ–µ"')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "random_anecdote"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_random_anecdote = InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç', callback_data=callback_data)

    payload = {"type": "action",
               "command": "random_toast"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_random_toast = InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ç–æ—Å—Ç', callback_data=callback_data)

    payload = {"type": "action",
               "command": "anecdote_subscribe"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_anecdote_subscribe = InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ê–Ω–µ–∫–¥–æ—Ç', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_subscribe"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_subscribe = InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data=callback_data)

    payload = {"type": "action",
               "command": "anecdote_unsubscribe"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_anecdote_unsubscribe = InlineKeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –ê–Ω–µ–∫–¥–æ—Ç–∞', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_unsubscribe"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_unsubscribe = InlineKeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –†–∞—Å–ø–∏—Å–∞–Ω–∏—è', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "settings"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_settings = InlineKeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "donate"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_donate = InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç', callback_data=callback_data)

    markup.row(btn_random_anecdote, btn_random_toast)
    markup.row(btn_anecdote_subscribe, btn_table_subscribe)
    markup.row(btn_anecdote_unsubscribe, btn_table_unsubscribe)
    markup.row(btn_settings, btn_donate)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü—Ä–æ—á–µ–µ" –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏" —Å –ø–æ—á—Ç–æ–π
def keyboard_links_mail():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏"')
    markup = InlineKeyboardMarkup()

    lnk_etu = InlineKeyboardButton('–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä–∞', url='https://etu.ru/')
    lnk_mail = InlineKeyboardButton('–ü–æ—á—Ç–∞', url='mail_url_placeholder')
    lnk_lk = InlineKeyboardButton('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', url='https://lk.etu.ru/')
    lnk_vec = InlineKeyboardButton('–ú—É–¥–ª', url='https://vec.etu.ru/')
    lnk_lib = InlineKeyboardButton('–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –õ–≠–¢–ò', url='http://library.etu.ru/')
    lnk_nexus = InlineKeyboardButton('–ü–æ–∏—Å–∫ –Ω–∞—É—á–Ω–æ–π –ª–∏—Ç-—Ä—ã', url='https://t.me/libgen_scihub_3_bot')

    markup.row(lnk_etu, lnk_mail)
    markup.row(lnk_lk, lnk_vec)
    markup.row(lnk_lib, lnk_nexus)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏" —Å –ø–æ—á—Ç–æ–π –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏" –±–µ–∑ –ø–æ—á—Ç—ã
def keyboard_links():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏"')
    markup = InlineKeyboardMarkup()

    lnk_etu = InlineKeyboardButton('–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä–∞', url='https://etu.ru/')
    lnk_lk = InlineKeyboardButton('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', url='https://lk.etu.ru/')
    lnk_vec = InlineKeyboardButton('–ú—É–¥–ª', url='https://vec.etu.ru/')
    lnk_lib = InlineKeyboardButton('–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –õ–≠–¢–ò', url='http://library.etu.ru/')
    lnk_nexus = InlineKeyboardButton('–ü–æ–∏—Å–∫ –Ω–∞—É—á–Ω–æ–π –ª–∏—Ç-—Ä—ã', url='https://t.me/libgen_scihub_3_bot')

    markup.row(lnk_etu)
    markup.row(lnk_lk, lnk_vec)
    markup.row(lnk_lib, lnk_nexus)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏" –±–µ–∑ –ø–æ—á—Ç—ã –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏"; even - —á—ë—Ç, odd - –Ω–µ—á—ë—Ç
# –ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è - "–≥–ª–∞–≤–Ω–∞—è"  (–æ—Ç–ª–∏—á–∏–µ –≤ —Ç–æ–º, —á—Ç–æ —Ç–µ–∫—É—â–∞—è —Å–ª–µ–≤–∞, –≤ –≤–∫ –æ—Ç–ª–∏—á–∏—è –≤ —Ü–≤–µ—Ç–∞—Ö!)
def kb_table_other_even():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" —á—ë—Ç–Ω–∞—è')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Monday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_even = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Monday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_odd = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Tuesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_even = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Tuesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_odd = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Wednesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_even = InlineKeyboardButton('–°—Ä–µ–¥–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Wednesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_odd = InlineKeyboardButton('–°—Ä–µ–¥–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Thursday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_even = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Thursday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_odd = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Friday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_even = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Friday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_odd = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Saturday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_even = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Saturday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_odd = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_back"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_monday_even, btn_monday_odd)
    markup.row(btn_tuesday_even, btn_tuesday_odd)
    markup.row(btn_wednesday_even, btn_wednesday_odd)
    markup.row(btn_thursday_even, btn_thursday_odd)
    markup.row(btn_friday_even, btn_friday_odd)
    markup.row(btn_saturday_even, btn_saturday_odd)
    markup.row(btn_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" —á—ë—Ç–Ω–∞—è –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –Ω–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è - "–≥–ª–∞–≤–Ω–∞—è"
def kb_table_other_odd():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" –Ω–µ—á—ë—Ç–Ω–∞—è')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Monday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_even = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Monday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_odd = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Tuesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_even = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Tuesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_odd = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Wednesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_even = InlineKeyboardButton('–°—Ä–µ–¥–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Wednesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_odd = InlineKeyboardButton('–°—Ä–µ–¥–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Thursday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_even = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Thursday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_odd = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Friday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_even = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Friday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_odd = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Saturday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_even = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday",
               "weekday": "Saturday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_odd = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_back"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_monday_odd, btn_monday_even)
    markup.row(btn_tuesday_odd, btn_tuesday_even)
    markup.row(btn_wednesday_odd, btn_wednesday_even)
    markup.row(btn_thursday_odd, btn_thursday_even)
    markup.row(btn_friday_odd, btn_friday_even)
    markup.row(btn_saturday_odd, btn_saturday_even)
    markup.row(btn_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" –Ω–µ—á—ë—Ç–Ω–∞—è –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# —Ç–æ–∂–µ —Å–∞–º–æ–µ, –Ω–æ additional:
def kb_table_other_even_2():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" —á—ë—Ç–Ω–∞—è additional')
    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Monday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_even = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Monday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_odd = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Tuesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_even = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Tuesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_odd = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Wednesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_even = InlineKeyboardButton('–°—Ä–µ–¥–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Wednesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_odd = InlineKeyboardButton('–°—Ä–µ–¥–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Thursday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_even = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Thursday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_odd = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Friday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_even = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Friday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_odd = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Saturday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_even = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Saturday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_odd = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_back"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_monday_even, btn_monday_odd)
    markup.row(btn_tuesday_even, btn_tuesday_odd)
    markup.row(btn_wednesday_even, btn_wednesday_odd)
    markup.row(btn_thursday_even, btn_thursday_odd)
    markup.row(btn_friday_even, btn_friday_odd)
    markup.row(btn_saturday_even, btn_saturday_odd)
    markup.row(btn_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" —á—ë—Ç–Ω–∞—è additional–≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –Ω–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è - "–≥–ª–∞–≤–Ω–∞—è" additional
def kb_table_other_odd_2():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" –Ω–µ—á—ë—Ç–Ω–∞—è additional')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Monday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_even = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Monday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_monday_odd = InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Tuesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_even = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Tuesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_tuesday_odd = InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Wednesday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_even = InlineKeyboardButton('–°—Ä–µ–¥–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Wednesday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_wednesday_odd = InlineKeyboardButton('–°—Ä–µ–¥–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Thursday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_even = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Thursday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_thursday_odd = InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Friday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_even = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Friday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_friday_odd = InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Saturday (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_even = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_weekday_2",
               "weekday": "Saturday (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_saturday_odd = InlineKeyboardButton('–°—É–±–±–æ—Ç–∞ (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_back"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_monday_odd, btn_monday_even)
    markup.row(btn_tuesday_odd, btn_tuesday_even)
    markup.row(btn_wednesday_odd, btn_wednesday_even)
    markup.row(btn_thursday_odd, btn_thursday_even)
    markup.row(btn_friday_odd, btn_friday_even)
    markup.row(btn_saturday_odd, btn_saturday_even)
    markup.row(btn_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏" –Ω–µ—á—ë—Ç–Ω–∞—è additional –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –ú–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

# –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø
def keyboard_change_groups():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "change_group"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_change_group = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –≥—Ä—É–ø–ø—É', callback_data=callback_data)

    payload = {"type": "action",
               "command": "change_additional_group"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_change_additional_group = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É', callback_data=callback_data)

    markup.row(btn_change_group)
    markup.row(btn_change_additional_group)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ø.–≥—Ä—É–ø–ø—ã (–¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤)
def keyboard_change_additional_group():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ø.–≥—Ä—É–ø–ø—ã')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "change_additional_group"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_change_additional_group = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É', callback_data=callback_data)

    markup.row(btn_change_additional_group)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ø.–≥—Ä—É–ø–ø—ã –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞
def keyboard_search_department():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "search_prepod_text"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_search_text = InlineKeyboardButton('–ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–º–∏–ª–∏–∏', callback_data=callback_data)

    payload = {"type": "action",
               "command": "search_department",
               "list_id": str(0)  # 0 –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–≤–∞—è –∫–ª–∞–≤–∞
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_search_department = InlineKeyboardButton('–í—ã–±–æ—Ä –∫–∞—Ñ–µ–¥—Ä—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "prepods_history"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_history = InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_back"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã', callback_data=callback_data)

    markup.row(btn_search_text)
    markup.row(btn_search_department)
    markup.row(btn_history)
    markup.row(btn_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ñ–µ–¥—Ä—ã –ø—Ä–µ–ø–æ–¥–∞ –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–∏–Ω–∏–∏–≥—Ä
def keyboard_minigames():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–∏–Ω–∏–∏–≥—Ä')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "heads_or_tails_toss"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_heads_or_nails = InlineKeyboardButton('–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞?', callback_data=callback_data)

    payload = {"type": "action",
               "command": "start_classical_RPC"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_RPC = InlineKeyboardButton('–ö–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞ —Å –±–æ—Ç–æ–º', callback_data=callback_data)

    payload = {"type": "action",
               "command": "start_multi_RPC"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_RPC_multi = InlineKeyboardButton('–ö–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞ —Å —á–µ–ª–æ–≤–µ–∫–æ–º', callback_data=callback_data)

    markup.row(btn_heads_or_nails)
    markup.row(btn_RPC)
    # markup.row(btn_RPC_multi)
    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–∏–Ω–∏–∏–≥—Ä –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–Ω–∏—è —Ä–µ—à–∫–∏
def keyboard_heads_or_tails_retoss():
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–Ω–∏—è —Ä–µ—à–∫–∏')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "heads_or_tails_toss"
               }
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_retoss = InlineKeyboardButton('–ë—Ä–æ—Å–∏—Ç—å –µ—â—ë —Ä–∞–∑', callback_data=callback_data)

    payload = {"type": "action",
               "command": "minigames"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∏–Ω–∏-–∏–≥—Ä—ã', callback_data=callback_data)

    markup.row(btn_retoss)
    markup.row(btn_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–Ω–∏—è —Ä–µ—à–∫–∏ –≥–æ—Ç–æ–≤–∞.\n')
    return markup


def keyboard_table_settings():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π (keyboard_table_settings)

    –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:
    - –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    - –¢–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏ (–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è/–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è/–æ–±–µ)
    - TODO –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ –§–ò–û –∏–ª–∏ –∫–∞–∫ —Å–µ–π—á–∞—Å - —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
    –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏:
    - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
    - –ù–∞–∑–∞–¥
    """
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "set_tables_mode"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_set_mode = InlineKeyboardButton('–¢–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data=callback_data)

    payload = {"type": "action",
               "command": "set_tables_time"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_set_time = InlineKeyboardButton('–í—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data=callback_data)

    # payload = {"type": "action",
    #            "command": "set_tables_mode"}
    # callback_data = payload_to_callback(payload)
    # logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    # btn_table_set_format = InlineKeyboardButton('–§–æ—Ä–º–∞—Ç —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_unsubscribe"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_unsubscribe = InlineKeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "other"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_table_set_mode)
    markup.row(btn_table_set_time)
    # markup.row(btn_table_set_format)
    markup.row(btn_table_unsubscribe)
    markup.row(btn_table_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫ –≥–æ—Ç–æ–≤–∞.\n')
    return markup


def keyboard_set_tables_mode():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π (set_tables_mode)
    –ö–Ω–æ–ø–∫–∏:
    - –¢–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏ (–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è/–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è/–æ–±–µ)
    - –ù–∞–∑–∞–¥
    """
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π')

    markup = InlineKeyboardMarkup()

    payload = {"type": "action",
               "command": "t_mode_set",
               "mode": "daily"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_set_mode_day = InlineKeyboardButton('–ï–∂–µ–¥–Ω–µ–≤–Ω–æ', callback_data=callback_data)

    payload = {"type": "action",
               "command": "t_mode_set",
               "mode": "weekly"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_set_mode_week = InlineKeyboardButton('–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ', callback_data=callback_data)

    payload = {"type": "action",
               "command": "t_mode_set",
               "mode": "both"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_set_mode_mix = InlineKeyboardButton('–û–±–∞', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "keyboard_table_settings"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_table_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_table_set_mode_day)
    markup.row(btn_table_set_mode_week)
    markup.row(btn_table_set_mode_mix)
    markup.row(btn_table_back)

    logger.info(f'–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫ –≥–æ—Ç–æ–≤–∞.\n')
    return markup


# –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def false_command_keyboard():  # todo –Ω–∞–¥–æ –ª–∏ –≤ —Ç–≥??
    logger.info(f'–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ')
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    logger.info(f'–ú–∏–Ω–∏-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ –≥–æ—Ç–æ–≤–∞.\n')
    pass


# –æ–≥—Ä–æ–º–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–æ–≤. —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
def keyboard_prepod_schedule(prepod_id, day):
    markup = InlineKeyboardMarkup()

    rus_to_eng_days = {'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—á—ë—Ç)': 'Monday (even)',
                       '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–µ—á—ë—Ç)': 'Monday (odd)',
                       '–í—Ç–æ—Ä–Ω–∏–∫ (—á—ë—Ç)': 'Tuesday (even)',
                       '–í—Ç–æ—Ä–Ω–∏–∫ (–Ω–µ—á—ë—Ç)': 'Tuesday (odd)',
                       '–°—Ä–µ–¥–∞ (—á—ë—Ç)': 'Wednesday (even)',
                       '–°—Ä–µ–¥–∞ (–Ω–µ—á—ë—Ç)': 'Wednesday (odd)',
                       '–ß–µ—Ç–≤–µ—Ä–≥ (—á—ë—Ç)': 'Thursday (even)',
                       '–ß–µ—Ç–≤–µ—Ä–≥ (–Ω–µ—á—ë—Ç)': 'Thursday (odd)',
                       '–ü—è—Ç–Ω–∏—Ü–∞ (—á—ë—Ç)': 'Friday (even)',
                       '–ü—è—Ç–Ω–∏—Ü–∞ (–Ω–µ—á—ë—Ç)': 'Friday (odd)',
                       '–°—É–±–±–æ—Ç–∞ (—á—ë—Ç)': 'Saturday (even)',
                       '–°—É–±–±–æ—Ç–∞ (–Ω–µ—á—ë—Ç)': 'Saturday (odd)',
                       '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (—á—ë—Ç)': 'Sunday (even)',
                       '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (–Ω–µ—á—ë—Ç)': 'Sunday (odd)',
                       'full (—á—ë—Ç)': 'week (even)',
                       'full (–Ω–µ—á—ë—Ç)': 'week (odd)'}

    day = rus_to_eng_days[day]

    payload = {"type": "action",
               "command": "table_prepod",
               "id": str(prepod_id),
               "weekday": day}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_today = InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_prepod",
               "id": str(prepod_id),
               "weekday": "week (even)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_week_even = InlineKeyboardButton('–í—Å—è –Ω–µ–¥–µ–ª—è (—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "action",
               "command": "table_prepod",
               "id": str(prepod_id),
               "weekday": "week (odd)"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_week_odd = InlineKeyboardButton('–í—Å—è –Ω–µ–¥–µ–ª—è (–Ω–µ—á—ë—Ç)', callback_data=callback_data)

    payload = {"type": "navigation",
               "place": "table_prepods"}
    callback_data = payload_to_callback(payload)
    logger.info(f'–ü–µ—Ä–µ–≤–æ–¥ payload –≤ callback_data: {len(callback_data)} —Å–∏–º–≤–æ–ª–∞ \n\t{payload}\n\t->\n\t{callback_data}')
    btn_back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callback_data)

    markup.row(btn_today)
    markup.row(btn_week_odd, btn_week_even)
    markup.row(btn_back)

    return markup


if __name__ == '__main__':
    keyboards = [
        'keyboard_main_cal',
        'keyboard_main',
        'keyboard_table_',
        'keyboard_table_exam',
        'keyboard_table_exam_additional',
        'keyboard_table_study',
        'keyboard_table_study_additional',
        'keyboard_table_mixed',
        'keyboard_table_mixed_additional',
        'keyboard_calendar',
        'keyboard_other',
        'keyboard_links_mail',
        'keyboard_links',
        'kb_table_other_even',
        'kb_table_other_even_2',
        'kb_table_other_odd',
        'kb_table_other_odd_2',
        'keyboard_change_groups',
        'keyboard_change_additional_group',
        'keyboard_search_department',
        'keyboard_minigames',
        'keyboard_heads_or_tails_retoss',
        'keyboard_table_settings',
        'keyboard_set_tables_mode'
    ]
    for keyboard in keyboards:
        try:
            with open(f'{keyboard}.json', 'w', encoding='utf-8') as f:
                exec(f'markup = {keyboard}()')
                f.write(markup.to_json())  # —Ç—É—Ç –Ω–µ—Ç –æ—à–∏–±–∫–∏! markup - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–µ
        except:
            logger.critical(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã {keyboard}\ntraceback: {traceback.format_exc()}')
